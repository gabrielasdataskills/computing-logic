




Question: You have been tasked with reviewing and updating this program. What steps would you take to identify any issues in the code?
Your Response: I would check the declarations, inputs and outputs, as well as check for any spelling errors (there was one). It's important to be sure the loop logic
is as it should be and remember to follow operations precendence.

Question: What actions could the developer have taken to minimize the number of errors?
Your Response: It's important to use parenthesis when you are trying to prioritize an operator. It's also important to double check your code for spelling errors and make sure that all
of the inputs are in the pseudocode. It's also important to test with sample data.

// This pseudocode is intended to determine whether students have
// passed or failed a course; student needs to average 60 or
// more on two tests. 
start
   Declarations
      num firstTest
      num secondTest
      num average
      num PASSING = 60

   output "Enter first score or 0 to quit"
   input firstTest

   while firstTest <> 0
      output "Enter second score"
      input secondTest

      average = (firstTest + secondTest) / 2
      output "Average is ", average

      if average >= PASSING then
         output "Pass"
      else
         output "Fail"
      endif

      output "Enter first score or 0 to quit"
      input firstTest
   endwhile
stop

// This pseudocode is intended to display employee net pay values.
// All employees have a standard $45 deduction from their checks.
// If an employee does not earn enough to cover the deduction,
// an error message is displayed.

start
   Declarations
      string name
      num hours
      num rate
      num DEDUCTION = 45
      string EOFNAME = "ZZZ"
      num gross
      num net

   output "Enter first name or ", EOFNAME, " to quit"
   input name

   while name <> EOFNAME
      output "Enter hours worked for ", name
      input hours
      output "Enter hourly rate for ", name
      input rate

      gross = hours * rate
      net = gross - DEDUCTION

      if net > 0 then
         output "Net pay for ", name, " is ", net
      else
         output "Deductions not covered. Net is 0."
      endif

      output "Enter next name or ", EOFNAME, " to quit"
      input name
   endwhile

   output "End of job"
stop


// This pseudocode is intended to determine whether students have
// passed or failed a course; student needs to average 60 or more on two tests.

start
   Declarations
      num firstTest
      num secondTest
      num average
      num PASSING = 60

   output "Enter first score or 0 to quit"
   input firstTest

   while firstTest <> 0
      output "Enter second score"
      input secondTest

      average = (firstTest + secondTest) / 2
      output "Average is ", average

      if average >= PASSING then
         output "Pass"
      else
         output "Fail"
      endif

      output "Enter first score or 0 to quit"
      input firstTest
   endwhile

stop

// This pseudocode segment is intended to compute and display
// the cost of home ownership for any number of users
// The program ends when a user enters 0 for the mortgage payment

start
   Declarations
      num mortgagePayment
      num utilities
      num taxes
      num upkeep
      num total
   startUp()
   input mortgagePayment
   while mortgagePayment not equal to 0
      mainLoop()
      input mortgagePayment
   endwhile
   finishUp()
stop

startUp()
   output "Enter your mortgage payment or 0 to quit"
return

mainLoop()
   output "Enter utilities"
   input utilities
   output "Enter taxes"
   input taxes
   output "Enter amount for upkeep"
   input upkeep
   total = mortgagePayment + utilities + taxes + upkeep
   output "Total is ", total
return

finishUp()
   output "End of program"
return
